[{"Title":"Accessing Free API Keys","Content":"- Create an account on OpenRouter.ai \n- Sign in using Google account \n- Navigate to models section \n- Apply filter for free models","Visual":"A screenshot showing the OpenRouter.ai website with a highlighted section indicating the models filter option, showcasing how to access free models.","Explaination":"To get started with OpenRouter.ai, the first step is to create an account. You can easily sign in using your Google account for quick access. Once you're logged in, it's important to navigate to the models section and apply a filter to view only the free models available. This filtering process is essential, especially when you're planning to integrate these models with other tools, as it helps you identify which models can be utilized without incurring any costs.","Timestamp":"(0:10)"},{"Title":"Creating and Managing API Keys","Content":"- Identify free models \n- Access profile section \n- Create a new API key \n- Copy the key securely","Visual":"An illustration depicting a user interface showing the profile section of OpenRouter.ai with a focus on the 'Create API Key' option.","Explaination":"After identifying the free models, the next step is to create your API key. This can be done by accessing your profile section and selecting the keys option. Here, you’ll create a new key and assign it a recognizable name, like 'pair AI'. It's crucial that you copy this key down securely because once generated, it won't be visible again. This key is essential for authenticating your API requests, so make sure to store it safely, perhaps in a notepad, to prevent any loss.","Timestamp":"(1:30)"},{"Title":"Configuring the API for Use","Content":"- Locate base URL in documentation \n- Navigate to your application 'pair' \n- Access config.json file \n- Enable auto-detection feature","Visual":"A detailed view of the config.json file on a computer screen, with highlighted sections showing where to input the base URL and enable auto-detection.","Explaination":"With your API key securely stored, the next step is to locate the base URL necessary for API interactions. You can find this information in the documentation section of the OpenRouter.ai website. Once you have the base URL, navigate to your application, which in this case is 'pair', and start the configuration process. You'll access the config.json file where you can adjust the model settings. A key feature to note is the auto-detection capability, which allows your application to automatically recognize and populate the available models based on these configured settings.","Timestamp":"(2:45)"},{"Title":"Populating Configuration Settings","Content":"- Input base URL and API key \n- Set provider to 'Open AI' \n- Customize display name \n- Save configuration","Visual":"An image of a user filling out a configuration form on a computer screen, with emphasis on the fields for the base URL, API key, and provider settings.","Explaination":"Once you have accessed the configuration file, it's time to input the base URL and your API key into their respective fields. Make sure that the provider is set correctly to 'Open AI', which is compatible with the models you’re using. You also have the option to customize the display name for the API provider in the 'pair' chat interface. After making these adjustments, don't forget to save your configuration to ensure that all changes are retained for future use.","Timestamp":"(4:05)"},{"Title":"Utilizing and Identifying Free Models","Content":"- Access 'pair' chat interface \n- Look for tags indicating free models \n- Example of a free model name","Visual":"A screenshot of the 'pair' chat interface displaying a list of models, with visual indicators or tags highlighting free models.","Explaination":"Once your configuration is complete, you can access the 'pair' chat interface, where all available models will be listed. To distinguish the free models from the paid ones, you’ll need to look for specific tags or indicators that denote a model as free. These tags typically appear at the end of the model name. For example, a model labeled 'metal llama 3.18 B instruct free' indicates that it is available at no cost. You may need to explore the list to find the specific free models you wish to utilize.","Timestamp":"(5:30)"}]